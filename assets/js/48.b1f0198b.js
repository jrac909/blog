(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{463:function(t,a,s){"use strict";s.r(a);var e=s(62),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#基础"}},[t._v("基础")]),s("ul",[s("li",[s("a",{attrs:{href:"#资料"}},[t._v("资料")])]),s("li",[s("a",{attrs:{href:"#概念"}},[t._v("概念")])]),s("li",[s("a",{attrs:{href:"#运行-shell-脚本"}},[t._v("运行 shell 脚本")])]),s("li",[s("a",{attrs:{href:"#shell-变量"}},[t._v("Shell 变量")])]),s("li",[s("a",{attrs:{href:"#shell-字符串"}},[t._v("Shell 字符串")])]),s("li",[s("a",{attrs:{href:"#shell-数组"}},[t._v("Shell 数组")])]),s("li",[s("a",{attrs:{href:"#shell-注释"}},[t._v("Shell 注释")])]),s("li",[s("a",{attrs:{href:"#传递参数"}},[t._v("传递参数")])]),s("li",[s("a",{attrs:{href:"#shell-运算符"}},[t._v("Shell 运算符")])]),s("li",[s("a",{attrs:{href:"#shell-echo"}},[t._v("Shell echo")])]),s("li",[s("a",{attrs:{href:"#shell-printf"}},[t._v("Shell printf")])]),s("li",[s("a",{attrs:{href:"#shell-流程控制"}},[t._v("Shell 流程控制")])]),s("li",[s("a",{attrs:{href:"#shell-输入-输出重定向"}},[t._v("Shell 输入/输出重定向")])])])]),s("li",[s("a",{attrs:{href:"#其他"}},[t._v("其他")]),s("ul",[s("li",[s("a",{attrs:{href:"#exit"}},[t._v("exit")])])])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[t._v("#")]),t._v(" 基础")]),t._v(" "),s("h3",{attrs:{id:"资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[t._v("#")]),t._v(" 资料")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://www.runoob.com/try/runcode.php?filename=helloworld&type=bash",target:"_blank",rel:"noopener noreferrer"}},[t._v("shell 在线工具"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.runoob.com/linux/linux-shell-variable.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("菜鸟教程"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),s("h4",{attrs:{id:"shell"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shell"}},[t._v("#")]),t._v(" Shell")]),t._v(" "),s("p",[t._v("是一个用 C 语言编写的程序, 这个应用程序提供了一个界面, 用户可以通过这个界面访问操作系统服务。")]),t._v(" "),s("h4",{attrs:{id:"shell-脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shell-脚本"}},[t._v("#")]),t._v(" Shell 脚本")]),t._v(" "),s("p",[t._v("为 shell 编写的脚本程序。")]),t._v(" "),s("h4",{attrs:{id:"shell-环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shell-环境"}},[t._v("#")]),t._v(" Shell 环境")]),t._v(" "),s("p",[t._v("首先明确, Shell 脚本在哪里都能编写, 只要有一个能编写代码的文本编辑器就好, 但是要执行脚本, 就需要一个脚本解释器。Linux 的 Shell 种类很多, 也就是 Shell 应用程序种类很多。常见的有：")]),t._v(" "),s("ul",[s("li",[t._v("Bourne Shell (/usr/bin/sh 或 /bin/sh)")]),t._v(" "),s("li",[t._v("Bourne Again Shell (/bin/bash)")]),t._v(" "),s("li",[t._v("C Shell (/usr/bin/csh)")]),t._v(" "),s("li",[t._v("K Shell (/usr/binksh)")]),t._v(" "),s("li",[t._v("Shell for Root (/sbin/sh)")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("ul",[s("li",[t._v("Bash 用的比较多, 因为它易用且免费, 它也是大多数 Linux 系统默认的 Shell。")]),t._v(" "),s("li",[t._v("一般情况, Bourne Shell 和 Bourne Again Shell不做区分, 想 #!/bin/sh 可以改为 #!/bin/bash\n#! 告诉系统其后路径所指定的程序即是解释此脚本文件的 Shell 程序")]),t._v(" "),s("li",[t._v("shell 脚本的扩展名并不一定为 sh, 扩展名并不影响脚本执行, 用 #! 指定即可")])])]),t._v(" "),s("h3",{attrs:{id:"运行-shell-脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行-shell-脚本"}},[t._v("#")]),t._v(" 运行 shell 脚本")]),t._v(" "),s("ol",[s("li",[t._v("作为可执行程序")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x ./test.sh  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使脚本具有执行权限")]),t._v("\n./test.sh  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#执行脚本")]),t._v("\n")])])]),s("p",[s("font",{attrs:{color:"red"}},[t._v("注意: ")]),s("font",{attrs:{size:"2"}},[t._v("一定要写成 ./test.sh，而不是 test.sh，运行其它二进制的程序也一样，直接写 test.sh，linux 系统会去 PATH 里寻找有没有叫 test.sh 的，而只有 /bin, /sbin, /usr/bin，/usr/sbin 等在 PATH 里，你的当前目录通常不在 PATH 里，所以写成 test.sh 是会找不到命令的，要用 ./test.sh 告诉系统说，就在当前目录找。")])],1),t._v(" "),s("p",[s("font",{attrs:{color:"red"}},[t._v("注意: ")]),s("font",{attrs:{size:"2"}},[t._v("写一个 test.sh 文件, 在 mac 终端执行 ./test.sh, 这时候会提示没有权限，然后执行 vim ./test.sh, 这时候发现是可以查看的, 其实是没有赋予执行权限，这时候执行 chmod 777 ./test.sh 就可以了")])],1),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("作为解释器参数\n直接运行解释器，其参数就是 shell 脚本的文件名，如：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("/bin/sh test.sh\n/bin/php test.php\n")])])]),s("p",[s("font",{attrs:{size:"2"}},[t._v("这种方式运行的脚本，不需要在第一行指定解释器信息，写了也没用。")])],1),t._v(" "),s("h3",{attrs:{id:"shell-变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shell-变量"}},[t._v("#")]),t._v(" Shell 变量")]),t._v(" "),s("h4",{attrs:{id:"定义变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义变量"}},[t._v("#")]),t._v(" 定义变量")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("变量名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("值\n")])])]),s("p",[s("font",{attrs:{color:"red"}},[t._v("注意: ")])],1),t._v(" "),s("ul",[s("li",[t._v("变量名和等号之间不能有空格")]),t._v(" "),s("li",[t._v("命名只能用英文、数字、下划线, 变量名不能以数字开头")]),t._v(" "),s("li",[t._v("不能使用 bash 里的关键字")])]),t._v(" "),s("h4",{attrs:{id:"使用变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用变量"}},[t._v("#")]),t._v(" 使用变量")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("your_name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"qinjx"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$your_name")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${your_name}")]),t._v("\n")])])]),s("p",[t._v("变量名外面的花括号是可选的，加不加都行, 推荐给所有变量加上花括号，这是个好的编程习惯。")]),t._v(" "),s("h4",{attrs:{id:"只读变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#只读变量"}},[t._v("#")]),t._v(" 只读变量")]),t._v(" "),s("p",[t._v("使用 readonly 命令可以将变量定义为只读变量，只读变量的值不能被改变。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("myUrl")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://www.google.com"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("readonly")]),t._v(" myUrl\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("myUrl")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://www.runoob.com"')]),t._v("\n")])])]),s("h4",{attrs:{id:"删除变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除变量"}},[t._v("#")]),t._v(" 删除变量")]),t._v(" "),s("p",[t._v("使用 unset 命令可以删除变量。变量被删除后不能再次使用。unset 命令不能删除只读变量。语法：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/sh")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("myUrl")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://www.runoob.com"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("unset")]),t._v(" myUrl\n")])])]),s("h4",{attrs:{id:"变量类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量类型"}},[t._v("#")]),t._v(" 变量类型")]),t._v(" "),s("ol",[s("li",[t._v("局部变量 局部变量在脚本或命令中定义，仅在当前shell实例中有效，其他shell启动的程序不能访问局部变量。")]),t._v(" "),s("li",[t._v("环境变量 所有的程序，包括shell启动的程序，都能访问环境变量，有些程序需要环境变量来保证其正常运行。必要的时候shell脚本也可以定义环境变量。")]),t._v(" "),s("li",[t._v("shell变量 shell变量是由shell程序设置的特殊变量。shell变量中有一部分是环境变量，有一部分是局部变量，这些变量保证了shell的正常运行")])]),t._v(" "),s("h3",{attrs:{id:"shell-字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shell-字符串"}},[t._v("#")]),t._v(" Shell 字符串")]),t._v(" "),s("p",[t._v("字符串是shell编程中最常用最有用的数据类型（除了数字和字符串，也没啥其它类型好用了），字符串可以用单引号，也可以用双引号，也可以不用引号。")]),t._v(" "),s("h4",{attrs:{id:"单引号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单引号"}},[t._v("#")]),t._v(" 单引号")]),t._v(" "),s("ul",[s("li",[t._v("单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的；")]),t._v(" "),s("li",[t._v("单引号字串中不能出现单独一个的单引号（对单引号使用转义符后也不行），但可成对出现，作为字符串拼接使用。")])]),t._v(" "),s("h4",{attrs:{id:"双引号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双引号"}},[t._v("#")]),t._v(" 双引号")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("your_name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, I know you are '),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$your_name")]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("! "),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -e "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),t._v("\n")])])]),s("ul",[s("li",[t._v("双引号里可以有变量")]),t._v(" "),s("li",[t._v("双引号里可以出现转义字符")])]),t._v(" "),s("h4",{attrs:{id:"拼接字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拼接字符串"}},[t._v("#")]),t._v(" 拼接字符串")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("your_name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用双引号拼接")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("greeting")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello, "')]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$your_name")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" !"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("greeting_1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello, '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${your_name}")]),t._v(' !"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$greeting")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$greeting_1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用单引号拼接")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("greeting_2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello, '")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$your_name")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' !'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("greeting_3")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello, ${your_name} !'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$greeting_2")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$greeting_3")]),t._v("\n")])])]),s("p",[t._v("输出结果：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("hello, runoob "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" hello, runoob "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nhello, runoob "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" hello, "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${your_name}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),s("h4",{attrs:{id:"获取字符串长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取字符串长度"}},[t._v("#")]),t._v(" 获取字符串长度")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abcd"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("string}")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 4")]),t._v("\n")])])]),s("p",[t._v("变量为数组时，${#string} 等价于 ${#string[0]}:")]),t._v(" "),s("h4",{attrs:{id:"提取子字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提取子字符串"}},[t._v("#")]),t._v(" 提取子字符串")]),t._v(" "),s("p",[t._v("以下实例从字符串第 2 个字符开始截取 4 个字符：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob is a great site"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("4}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 unoo")]),t._v("\n")])])]),s("p",[s("font",{attrs:{color:"red"}},[t._v("注意: ")]),t._v("第一个字符的索引值为 0。")],1),t._v(" "),s("h4",{attrs:{id:"查找子字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查找子字符串"}},[t._v("#")]),t._v(" 查找子字符串")]),t._v(" "),s("p",[t._v("查找字符 i 或 o 的位置(哪个字母先出现就计算哪个)：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob is a great site"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$string")]),t._v('"')]),t._v(" io"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 4")]),t._v("\n")])])]),s("h3",{attrs:{id:"shell-数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shell-数组"}},[t._v("#")]),t._v(" Shell 数组")]),t._v(" "),s("p",[t._v("bash支持一维数组（不支持多维数组），并且没有限定数组的大小。\n类似于 C 语言，数组元素的下标由 0 开始编号。获取数组中的元素要利用下标，下标可以是整数或算术表达式，其值应大于或等于 0。")]),t._v(" "),s("h4",{attrs:{id:"定义数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义数组"}},[t._v("#")]),t._v(" 定义数组")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("array_name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value0 value1 value2 value3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\narray_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value0\narray_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value1\narray_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("valuen\n")])])]),s("p",[t._v("可以不使用连续的下标，而且下标的范围没有限制。")]),t._v(" "),s("h4",{attrs:{id:"读取数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#读取数组"}},[t._v("#")]),t._v(" 读取数组")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${数组名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("下标"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n")])])]),s("p",[t._v("使用 @ 符号可以获取数组中的所有元素，例如：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${array_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"获取数组的长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取数组的长度"}},[t._v("#")]),t._v(" 获取数组的长度")]),t._v(" "),s("p",[t._v("获取数组长度的方法与获取字符串长度的方法相同，例如：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取得数组元素的个数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("array_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("array_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("*"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取得数组单个元素的长度")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("lengthn")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("array_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"shell-注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shell-注释"}},[t._v("#")]),t._v(" Shell 注释")]),t._v(" "),s("h4",{attrs:{id:"单行注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单行注释"}},[t._v("#")]),t._v(" 单行注释")]),t._v(" "),s("p",[t._v("以 # 开头的行就是注释，会被解释器忽略。")]),t._v(" "),s("h4",{attrs:{id:"多行注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多行注释"}},[t._v("#")]),t._v(" 多行注释")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF\n注释内容...\n注释内容...\n注释内容...\nEOF")]),t._v("\n")])])]),s("p",[t._v("EOF 也可以使用其他符号:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\n注释内容...\n注释内容...\n注释内容...\n'")]),t._v("\n\n:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n注释内容"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n注释内容"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n注释内容"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),s("h3",{attrs:{id:"传递参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#传递参数"}},[t._v("#")]),t._v(" 传递参数")]),t._v(" "),s("p",[t._v("我们可以在执行 Shell 脚本时，向脚本传递参数，脚本内获取参数的格式为：$n。n 代表一个数字，1 为执行脚本的第一个参数，2 为执行脚本的第二个参数，以此类推……")]),t._v(" "),s("p",[t._v("以下实例我们向脚本传递三个参数，并分别输出，其中 $0 为执行的文件名（包含文件路径）：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"执行的文件名：'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"第一个参数为：'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"第二个参数为：'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"第三个参数为：'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$3")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("为脚本设置可执行权限，并执行脚本，输出结果如下所示：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ ./test.sh "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nShell 传递参数实例！\n执行的文件名：./test.sh\n第一个参数为：1\n第二个参数为：2\n第三个参数为：3\n")])])]),s("p",[t._v("另外，还有几个特殊字符用来处理参数:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("参数处理")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("$#")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("传递到脚本的参数个数")])]),t._v(" "),s("tr",[s("td",[t._v("$*")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('以一个单字符串显示所有向脚本传递的参数。如"$*"用「"」括起来的情况、以"$1 $2 … $n"的形式输出所有参数。')])]),t._v(" "),s("tr",[s("td",[t._v("$$")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("脚本运行的当前进程ID号")])]),t._v(" "),s("tr",[s("td",[t._v("$!")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("后台运行的最后一个进程的ID号")])]),t._v(" "),s("tr",[s("td",[t._v("$@")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('与$*相同，但是使用时加引号，并在引号中返回每个参数。如"$@"用「"」括起来的情况、以"$1" "$2" … "$n" 的形式输出所有参数。')])]),t._v(" "),s("tr",[s("td",[t._v("$-")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("显示Shell使用的当前选项，与set命令功能相同。")])]),t._v(" "),s("tr",[s("td",[t._v("$?")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误")])])])]),t._v(" "),s("p",[s("strong",[t._v("$* 与 $@ 区别")])]),t._v(" "),s("ul",[s("li",[t._v("相同点：都是引用所有参数。")]),t._v(" "),s("li",[t._v('不同点：只有在双引号中体现出来。假设在脚本运行时写了三个参数 1、2、3，，则 " * " 等价于 "1 2 3"（传递了一个参数），而 "@" 等价于 "1" "2" "3"（传递了三个参数）。')])]),t._v(" "),s("h3",{attrs:{id:"shell-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shell-运算符"}},[t._v("#")]),t._v(" Shell 运算符")]),t._v(" "),s("p",[t._v("原生bash不支持简单的数学运算，但是可以通过其他命令来实现，例如 awk 和 expr，expr 最常用。\nexpr 是一款表达式计算工具，使用它能完成表达式的求值操作。\n例如，两个数相加：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("val")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" + "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"两数之和为 : '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$val")]),t._v('"')]),t._v("\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("ul",[s("li",[t._v("表达式和运算符之间要有空格，例如 2+2 是不对的，必须写成 2 + 2，这与我们熟悉的大多数编程语言不一样。")]),t._v(" "),s("li",[t._v("完整的表达式要被 "),s("code"),t._v(" 包含，注意这个字符不是常用的单引号，在 Esc 键下边。")])])]),t._v(" "),s("h4",{attrs:{id:"算术运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[t._v("#")]),t._v(" 算术运算符")]),t._v(" "),s("p",[t._v("下表列出了常用的算术运算符，假定变量 a 为 10，变量 b 为 20：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("举例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("+")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("加法")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("expr $a + $b")]),t._v(" 结果为 30。")])]),t._v(" "),s("tr",[s("td",[t._v("-")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("减法")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("expr $a - $b")]),t._v(" 结果为 -10。")])]),t._v(" "),s("tr",[s("td",[t._v("*")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("乘法")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("expr $a \\* $b")]),t._v(" 结果为 200。")])]),t._v(" "),s("tr",[s("td",[t._v("/")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("除法")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("expr $b / $a")]),t._v(" 结果为 2。")])]),t._v(" "),s("tr",[s("td",[t._v("%")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("取余")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("expr $b % $a")]),t._v(" 结果为 0。")])]),t._v(" "),s("tr",[s("td",[t._v("=")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("赋值")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("a=$b 把变量 b 的值赋给 a。")])]),t._v(" "),s("tr",[s("td",[t._v("==")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("相等。用于比较两个数字，相同则返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ $a == $b ] 返回 false")])]),t._v(" "),s("tr",[s("td",[t._v("!=")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不相等。用于比较两个数字，不相同则返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ $a != $b ] 返回 true")])])])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("ul",[s("li",[t._v("条件表达式要放在方括号之间，并且要有空格，例如: [$a==$b] 是错误的，必须写成 [ $a == $b ]。")]),t._v(" "),s("li",[t._v("乘号(*)前边必须加反斜杠()才能实现乘法运算")]),t._v(" "),s("li",[t._v('在 MAC 中 shell 的 expr 语法是：$((表达式))，此处表达式中的 "*" 不需要转义符号 ""')])])]),t._v(" "),s("h4",{attrs:{id:"关系运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符"}},[t._v("#")]),t._v(" 关系运算符")]),t._v(" "),s("p",[t._v("关系运算符只支持数字，不支持字符串，除非字符串的值是数字。\n下表列出了常用的关系运算符，假定变量 a 为 10，变量 b 为 20：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("举例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-eq")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测两个数是否相等，相等返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ $a -eq $b ] 返回 false。")])]),t._v(" "),s("tr",[s("td",[t._v("-ne")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测两个数是否不相等，不相等返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ $a -ne $b ] 返回 true。")])]),t._v(" "),s("tr",[s("td",[t._v("-gt")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测左边的数是否大于右边的，如果是，则返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ $a -gt $b ] 返回 false")])]),t._v(" "),s("tr",[s("td",[t._v("-lt")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测左边的数是否小于右边的，如果是，则返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ $a -lt $b ] 返回 true。")])]),t._v(" "),s("tr",[s("td",[t._v("-ge")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测左边的数是否大于等于右边的，如果是，则返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ $a -ge $b ] 返回 false。")])]),t._v(" "),s("tr",[s("td",[t._v("-le")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测左边的数是否小于等于右边的，如果是，则返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ $a -le $b ] 返回 true。")])])])]),t._v(" "),s("h4",{attrs:{id:"布尔运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布尔运算符"}},[t._v("#")]),t._v(" 布尔运算符")]),t._v(" "),s("p",[t._v("下表列出了常用的布尔运算符，假定变量 a 为 10，变量 b 为 20")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("举例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("!")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("非运算，表达式为 true 则返回 false，否则返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ ! false ] 返回 true。")])]),t._v(" "),s("tr",[s("td",[t._v("-o")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("或运算，有一个表达式为 true 则返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ $a -lt 20 -o $b -gt 100 ] 返回 true。")])]),t._v(" "),s("tr",[s("td",[t._v("-a")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("与运算，两个表达式都为 true 才返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ $a -lt 20 -a $b -gt 100 ] 返回 false。")])])])]),t._v(" "),s("h4",{attrs:{id:"逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),s("p",[t._v("以下介绍 Shell 的逻辑运算符，假定变量 a 为 10，变量 b 为 20:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("举例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("&&")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("逻辑的 AND")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[[ $a -lt 100 && $b -gt 100 ]] 返回 false")])]),t._v(" "),s("tr",[s("td",[t._v("||")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("逻辑的 OR")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[[ $a -lt 100 || $b -gt 100 ]] 返回 true")])])])]),t._v(" "),s("h4",{attrs:{id:"字符串运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串运算符"}},[t._v("#")]),t._v(" 字符串运算符")]),t._v(" "),s("p",[t._v('下表列出了常用的字符串运算符，假定变量 a 为 "abc"，变量 b 为 "efg"：')]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("举例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("=")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测两个字符串是否相等，相等返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ $a = $b ] 返回 false。")])]),t._v(" "),s("tr",[s("td",[t._v("!=")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测两个字符串是否不相等，不相等返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ $a != $b ] 返回 true。")])]),t._v(" "),s("tr",[s("td",[t._v("-z")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测字符串长度是否为0，为0返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ -z $a ] 返回 false。")])]),t._v(" "),s("tr",[s("td",[t._v("-n")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测字符串长度是否不为 0，不为 0 返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v('[ -n "$a" ] 返回 true。')])]),t._v(" "),s("tr",[s("td",[t._v("$")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测字符串是否为空，不为空返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ $a ] 返回 true。")])])])]),t._v(" "),s("h4",{attrs:{id:"文件测试运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件测试运算符"}},[t._v("#")]),t._v(" 文件测试运算符")]),t._v(" "),s("p",[t._v("文件测试运算符用于检测 Unix 文件的各种属性。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("举例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("-b file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测文件是否是块设备文件，如果是，则返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ -b $file ] 返回 false")])]),t._v(" "),s("tr",[s("td",[t._v("-c file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测文件是否是字符设备文件，如果是，则返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ -c $file ] 返回 false")])]),t._v(" "),s("tr",[s("td",[t._v("-d file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测文件是否是目录，如果是，则返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ -d $file ] 返回 false")])]),t._v(" "),s("tr",[s("td",[t._v("-f file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 true")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ -f $file ] 返回 true")])]),t._v(" "),s("tr",[s("td",[t._v("-g file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测文件是否设置了 SGID 位，如果是，则返回 true")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ -g $file ] 返回 false")])]),t._v(" "),s("tr",[s("td",[t._v("-k file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测文件是否设置了粘着位(Sticky Bit)，如果是，则返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ -k $file ] 返回 false")])]),t._v(" "),s("tr",[s("td",[t._v("-p file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测文件是否是有名管道，如果是，则返回 true")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ -g $file ] 返回 false")])]),t._v(" "),s("tr",[s("td",[t._v("-u file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测文件是否设置了 SUID 位，如果是，则返回 true。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ -u $file ] 返回 false")])]),t._v(" "),s("tr",[s("td",[t._v("-r file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测文件是否可读，如果是，则返回 true")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ -r $file ] 返回 false")])]),t._v(" "),s("tr",[s("td",[t._v("-w file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测文件是否可写，如果是，则返回 true")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ -w $file ] 返回 false")])]),t._v(" "),s("tr",[s("td",[t._v("-x file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测文件是否可执行，如果是，则返回 true")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ -x $file ] 返回 false")])]),t._v(" "),s("tr",[s("td",[t._v("-s file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测文件是否为空（文件大小是否大于0），不为空返回 true")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ -s $file ] 返回 false")])]),t._v(" "),s("tr",[s("td",[t._v("-e file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测文件（包括目录）是否存在，如果是，则返回 true")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ -e $file ] 返回 false")])]),t._v(" "),s("tr",[s("td",[t._v("-S file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("判断某文件是否 socket")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ -S $file ] 返回 false")])]),t._v(" "),s("tr",[s("td",[t._v("-L file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("检测文件是否存在并且是一个符号链接。")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[ -L $file ] 返回 false")])])])]),t._v(" "),s("h3",{attrs:{id:"shell-echo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shell-echo"}},[t._v("#")]),t._v(" Shell echo")]),t._v(" "),s("h4",{attrs:{id:"显示普通字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示普通字符串"}},[t._v("#")]),t._v(" 显示普通字符串")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"It is a test"')]),t._v(" // 双引号可以省略\n")])])]),s("h4",{attrs:{id:"显示转义字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示转义字符"}},[t._v("#")]),t._v(" 显示转义字符")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("It is a test"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v('"')]),t._v("\n")])])]),s("h4",{attrs:{id:"显示变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示变量"}},[t._v("#")]),t._v(" 显示变量")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$name")]),t._v(' It is a test"')]),t._v("\n")])])]),s("h4",{attrs:{id:"显示换行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示换行"}},[t._v("#")]),t._v(" 显示换行")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OK! '),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -e 开启转义")]),t._v("\n")])])]),s("h4",{attrs:{id:"显示不换行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示不换行"}},[t._v("#")]),t._v(" 显示不换行")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OK! '),s("span",{pre:!0,attrs:{class:"token entity",title:"\\c"}},[t._v("\\c")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -e 开启转义 \\c 不换行")]),t._v("\n")])])]),s("h4",{attrs:{id:"显示结果定向至文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示结果定向至文件"}},[t._v("#")]),t._v(" 显示结果定向至文件")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"It is a test"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" myfile\n")])])]),s("h4",{attrs:{id:"原样输出字符串-不进行转义或取变量-用单引号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原样输出字符串-不进行转义或取变量-用单引号"}},[t._v("#")]),t._v(" 原样输出字符串，不进行转义或取变量(用单引号)")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$name\\\"'")]),t._v("\n")])])]),s("h4",{attrs:{id:"显示命令执行结果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示命令执行结果"}},[t._v("#")]),t._v(" 显示命令执行结果")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n")])])]),s("h3",{attrs:{id:"shell-printf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shell-printf"}},[t._v("#")]),t._v(" Shell printf")]),t._v(" "),s("h3",{attrs:{id:"shell-流程控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shell-流程控制"}},[t._v("#")]),t._v(" Shell 流程控制")]),t._v(" "),s("h4",{attrs:{id:"if-没有-else"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#if-没有-else"}},[t._v("#")]),t._v(" if 没有 else")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" 判断条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n   执行内容\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),s("h4",{attrs:{id:"case-esac"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#case-esac"}},[t._v("#")]),t._v(" case ... esac")]),t._v(" "),s("p",[t._v("case ... esac 为多选择语句，与其他语言中的 switch ... case 语句类似，是一种多分支选择结构，每个 case 分支用右圆括号开始，用两个分号 ;; 表示 break，即执行结束，跳出整个 case ... esac 语句，esac（就是 case 反过来）作为结束标记。\n可以用 case 语句匹配一个值与一个模式，如果匹配成功，执行相匹配的命令。\ncase ... esac 语法格式如下：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" 值 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n模式1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    command1\n    command2\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n    commandN\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n模式2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    command1\n    command2\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n    commandN\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n")])])]),s("h3",{attrs:{id:"shell-输入-输出重定向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shell-输入-输出重定向"}},[t._v("#")]),t._v(" Shell 输入/输出重定向")]),t._v(" "),s("p",[t._v("大多数 UNIX 系统命令从你的终端接受输入并将所产生的输出发送回​​到您的终端。一个命令通常从一个叫标准输入的地方读取输入，默认情况下，这恰好是你的终端。同样，一个命令通常将其输出写入到标准输出，默认情况下，这也是你的终端。")]),t._v(" "),s("h4",{attrs:{id:"重定向命令列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重定向命令列表"}},[t._v("#")]),t._v(" 重定向命令列表")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("command > file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("将输出重定向到 file")])]),t._v(" "),s("tr",[s("td",[t._v("command < file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("将输入重定向到 file")])]),t._v(" "),s("tr",[s("td",[t._v("command >> file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("将输出以追加的方式重定向到 file")])]),t._v(" "),s("tr",[s("td",[t._v("n > file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("将文件描述符为 n 的文件重定向到 file")])]),t._v(" "),s("tr",[s("td",[t._v("n >> file")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("将文件描述符为 n 的文件以追加的方式重定向到 file")])]),t._v(" "),s("tr",[s("td",[t._v("n >& m")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("将输出文件 m 和 n 合并")])]),t._v(" "),s("tr",[s("td",[t._v("n <& m")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("将输入文件 m 和 n 合并")])]),t._v(" "),s("tr",[s("td",[t._v("<< tag")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("将开始标记 tag 和结束标记 tag 之间的内容作为输入")])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("文件描述符")]),t._v(" "),s("ul",[s("li",[t._v("0 是标准输入（STDIN）")]),t._v(" "),s("li",[t._v("1 是标准输出（STDOUT）")]),t._v(" "),s("li",[t._v("2 是标准错误输出（STDERR）")])])]),t._v(" "),s("h4",{attrs:{id:"dev-null-文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dev-null-文件"}},[t._v("#")]),t._v(" /dev/null 文件")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /dev/null\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("ul",[s("li",[t._v("如果希望执行某个命令，但又不希望在屏幕上显示输出结果，那么可以将输出重定向到 /dev/null")]),t._v(" "),s("li",[t._v('/dev/null 是一个特殊的文件，写入到它的内容都会被丢弃；如果尝试从该文件读取内容，那么什么也读不到。但是 /dev/null 文件非常有用，将命令的输出重定向到它，会起到"禁止输出"的效果。')])])]),t._v(" "),s("h2",{attrs:{id:"其他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),s("h3",{attrs:{id:"exit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exit"}},[t._v("#")]),t._v(" exit")]),t._v(" "),s("ul",[s("li",[t._v("exit 0 : 正常运行程序并退出程序")]),t._v(" "),s("li",[t._v("exit 1 : 非正常运行导致退出程序")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("$?")]),t._v(" "),s("p",[t._v("通过 exit 退出程序后, 可以通过 $? 拿到退出的 code")])])])}),[],!1,null,null,null);a.default=r.exports}}]);