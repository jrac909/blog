(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{448:function(t,a,s){"use strict";s.r(a);var e=s(62),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"脚手架介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#脚手架介绍"}},[t._v("#")]),t._v(" 脚手架介绍")]),t._v(" "),s("ol",[s("li",[t._v("xxx 脚手架：用来帮助程序员快速创建一个基于 xx 库的模版项目\n"),s("ul",[s("li",[t._v("包含了所有需要的配置（语法检查、jsx 编译、devServer）")]),t._v(" "),s("li",[t._v("下载好了所有相关的依赖")]),t._v(" "),s("li",[t._v("可以直接运行一个简单效果")])])]),t._v(" "),s("li",[t._v("react 提供了一个用于创建 react 项目的脚手架库：create-react-app")]),t._v(" "),s("li",[t._v("项目的整体技术架构为：react + webpack + es6 + eslint（不止这些，只是列了一些关键技术）")]),t._v(" "),s("li",[t._v("使用脚手架开发项目的特点：模块化，组件化，工程化")])]),t._v(" "),s("h2",{attrs:{id:"怎么用脚手架创建并启动一个-react-项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么用脚手架创建并启动一个-react-项目"}},[t._v("#")]),t._v(" 怎么用脚手架创建并启动一个 react 项目？")]),t._v(" "),s("p",[t._v("第一步：全局安装：npm i -g create-react-app\n第二步：切换到想创建项目的目录，使用命令：create-react-app react_staging\n第三步：进入项目文件夹：cd hello-react\n第四步：启动项目：npm start")]),t._v(" "),s("h2",{attrs:{id:"react-脚手架文件结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-脚手架文件结构"}},[t._v("#")]),t._v(" react 脚手架文件结构")]),t._v(" "),s("ul",[s("li",[t._v("public ---- 静态资源文件：一般存静态资源文件\n"),s("ul",[s("li",[t._v("favicon.ico ---- 网站图标")]),t._v(" "),s("li",[t._v("index.html ---- 网站的主页面\n"),s("ul",[s("li",[t._v("整个项目只有一个 html 文件")]),t._v(" "),s("li",[t._v("react 渲染节点的容器写这里面")]),t._v(" "),s("li",[t._v("%PUBLIC_URL% 表示 public 文件夹的路径，这是 react 脚手架特有的")])])])])]),t._v(" "),s("li",[t._v("src\n"),s("ul",[s("li",[t._v("app.js ---- 创建了一个组件，组件就叫 App")]),t._v(" "),s("li",[t._v("app.css ---- app 组件的样式文件")])])])]),t._v(" "),s("h2",{attrs:{id:"组件名字后缀"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件名字后缀"}},[t._v("#")]),t._v(" 组件名字后缀")]),t._v(" "),s("p",[t._v("组件文件可以是 js 后缀也可以是 jsx 后缀，为了和其他 js 文件区分，一般使用 jsx 作为组件文件后缀，但是入口文件 index.js，还有最外层组件 App.js 一般是用 js 后缀。")]),t._v(" "),s("h2",{attrs:{id:"样式文件怎么进行模块化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#样式文件怎么进行模块化"}},[t._v("#")]),t._v(" 样式文件怎么进行模块化？")]),t._v(" "),s("ul",[s("li",[t._v("样式文件冲突的情况是：比如在 components 文件夹下建立两个组件文件夹，分别为 com1、com2，然后在 com1、com2 下面分别创建组件 jsx 文件和样式 css 文件，然后分别在 com1、com2 组件文件中分别引入对应的样式文件。这样，如果两个样式文件中有重名的选择器，那么，样式会被覆盖。")]),t._v(" "),s("li",[t._v("解决问题方法一：每个组件最外层包裹一个唯一的类")]),t._v(" "),s("li",[t._v("解决问题方法二：\n"),s("ul",[s("li",[t._v("样式文件命名为：namexxx.module.css")]),t._v(" "),s("li",[t._v("在组件文件中引入样式文件并重命名：import hello from './index.module.css'")]),t._v(" "),s("li",[t._v("使用样式：className={ hello.title }")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引入样式文件并且重命名")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" welcome "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.module.css'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Welcome")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用样式")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h3 className"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("welcome"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("welcome 组件"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"开发过程建议安装的插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发过程建议安装的插件"}},[t._v("#")]),t._v(" 开发过程建议安装的插件")]),t._v(" "),s("ul",[s("li",[t._v("vscode ES7 React/Redux/GraphQL/React-Native snippets：rcc 能自动创建类式组件模版")])]),t._v(" "),s("p",[s("code",[t._v("补充一个内容：关于经常用到的组件中有多选框，然后父组件传递选中状态")]),t._v("\n设置 checked 值，但是必须要结合 onchange 方法使用，不然会报错。不能用 defaultChecked，因为它只有第一次设置生效，后面修改值，界面不会变化。")])])}),[],!1,null,null,null);a.default=r.exports}}]);