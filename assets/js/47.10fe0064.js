(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{462:function(t,a,s){"use strict";s.r(a);var e=s(62),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#pm2-快速开始"}},[t._v("PM2 快速开始")]),s("ul",[s("li",[s("a",{attrs:{href:"#作用"}},[t._v("作用")])]),s("li",[s("a",{attrs:{href:"#安装"}},[t._v("安装")])]),s("li",[s("a",{attrs:{href:"#启动-pm2"}},[t._v("启动 pm2")])]),s("li",[s("a",{attrs:{href:"#一些简单的、常用的管理应用状态的命令"}},[t._v("一些简单的、常用的管理应用状态的命令")])]),s("li",[s("a",{attrs:{href:"#列出管理中的应用"}},[t._v("列出管理中的应用")])]),s("li",[s("a",{attrs:{href:"#查看日志"}},[t._v("查看日志")])]),s("li",[s("a",{attrs:{href:"#查看实时-dashboard"}},[t._v("查看实时 dashboard")])]),s("li",[s("a",{attrs:{href:"#pm2-io-使用-web-监控信息"}},[t._v("pm2.io 使用 web 监控信息")])]),s("li",[s("a",{attrs:{href:"#集群模式"}},[t._v("集群模式")])]),s("li",[s("a",{attrs:{href:"#配置文件的形式启动"}},[t._v("配置文件的形式启动")])]),s("li",[s("a",{attrs:{href:"#设置-pm2-开机自启"}},[t._v("设置 pm2 开机自启")])])])]),s("li",[s("a",{attrs:{href:"#基础-不完整"}},[t._v("基础 (不完整)")]),s("ul",[s("li",[s("a",{attrs:{href:"#配置文件"}},[t._v("配置文件")])])])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"pm2-快速开始"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pm2-快速开始"}},[t._v("#")]),t._v(" PM2 快速开始")]),t._v(" "),s("p",[t._v("pm2 是一个守护进程管理器, 它可以用来管理和维护在线应用。pm2 以简单的命令行形式提供服务, 并且可以通过 npm 安装。")]),t._v(" "),s("h3",{attrs:{id:"作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/6975110853473337381",target:"_blank",rel:"noopener noreferrer"}},[t._v("pm2 的应用"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("pm2 是一个带有负载均衡功能的 Node 应用的进程管理器, 可以利用服务器上的所有 CPU, 并保证进程永远都活着, 0 秒重载, 部署管理多个 node 项目。")]),t._v(" "),s("ul",[s("li",[t._v("监听文件变化, 自动重启程序")]),t._v(" "),s("li",[t._v("支持性能监控")]),t._v(" "),s("li",[t._v("负载均衡")]),t._v(" "),s("li",[t._v("程序崩溃自动重启")]),t._v(" "),s("li",[t._v("服务器重新启动时自动重新启动")]),t._v(" "),s("li",[t._v("自动化部署项目")])]),t._v(" "),s("h3",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("p",[t._v("可以通过 Npm 和 yarn 安装 pm2 的最新版本")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("npm install pm2@latest "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("g\n# 或\nyarn global add pm2\n")])])]),s("h3",{attrs:{id:"启动-pm2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-pm2"}},[t._v("#")]),t._v(" 启动 pm2")]),t._v(" "),s("ol",[s("li",[t._v("最简单方式启动、监控一个应用：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("pm2 start app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js # 会以表格形式显示这个应用运行情况"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 比如占用内存\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("启动、监控其他类型脚本文件：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("pm2 start bashscript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh\npm2 start python"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("py "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("watch\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("可以通过命令行传入一些参数")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("参数")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("--name")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("指定应用程序的名称(后面可以通过这个 name 去 stop、delete, 同一个应用程序, 可以启动多次, 有多个 name)")])]),t._v(" "),s("tr",[s("td",[t._v("--watch")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("监听文件, 在文件变化时, 重启应用程序")])]),t._v(" "),s("tr",[s("td",[t._v("--max-memory-restart <200MB>")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("设置应用程序重载的内存阈值")])]),t._v(" "),s("tr",[s("td",[t._v("--log")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("指定日志文件的路径")])]),t._v(" "),s("tr",[s("td",[t._v("-- arg1 arg2 arg3")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("给脚本传递额外的参数")])]),t._v(" "),s("tr",[s("td",[t._v("--restart-delay <delay in ms>")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("自动重启的间隔时间")])]),t._v(" "),s("tr",[s("td",[t._v("--time")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("带时间的日志前缀")])]),t._v(" "),s("tr",[s("td",[t._v("--no-autorestart")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("不自动重启应用程序")])]),t._v(" "),s("tr",[s("td",[t._v("--cron <cron_pattern>")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("为强制重启指定记时程序")])]),t._v(" "),s("tr",[s("td",[t._v("--no-daemon")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("附加到应用程序日志")])])])]),t._v(" "),s("h3",{attrs:{id:"一些简单的、常用的管理应用状态的命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一些简单的、常用的管理应用状态的命令"}},[t._v("#")]),t._v(" 一些简单的、常用的管理应用状态的命令")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("pm2 restart app_name "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重启应用")]),t._v("\npm2 reload app_name "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新加载应用")]),t._v("\npm2 stop app_name "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 停止应用(列表还能看到, 只是状态为 stop)")]),t._v("\npm2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" app_name "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除应用(列表中也无了)")]),t._v("\n")])])]),s("p",[t._v("注意：")]),t._v(" "),s("ul",[s("li",[t._v("app_name 还可以替换为应用 id, 或者替换成 all, 表示是操作所有进程")]),t._v(" "),s("li",[t._v("restart 和 reload 的区别: restart 是先停止这个进程, 然后再开启进程, 中间会有中断的过程; reload 是先开启这个进程, 然后关闭旧进程")])]),t._v(" "),s("p",[t._v("现在已经启动了应用, 你现在可以查看它的状态、日志、各项指标了, 甚至可以通过 pm2.io 以 dashboard 形式查看。")]),t._v(" "),s("h3",{attrs:{id:"列出管理中的应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列出管理中的应用"}},[t._v("#")]),t._v(" 列出管理中的应用")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("pm2 list"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ls"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("status "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这三个命令看到的效果是一样的")]),t._v("\npm2 describe app_name "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看详细信息")]),t._v("\n")])])]),s("h3",{attrs:{id:"查看日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看日志"}},[t._v("#")]),t._v(" 查看日志")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("pm2 logs "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 比如刷新页面进行新的请求, 就会打印日志")]),t._v("\npm2 logs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("lines "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显示指定行日志, 这里是显示 200 行日志")]),t._v("\n")])])]),s("h3",{attrs:{id:"查看实时-dashboard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看实时-dashboard"}},[t._v("#")]),t._v(" 查看实时 dashboard")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("pm2 monit\n")])])]),s("p",[t._v("查看实时日志、指标等, 会适配当下的终端")]),t._v(" "),s("h3",{attrs:{id:"pm2-io-使用-web-监控信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pm2-io-使用-web-监控信息"}},[t._v("#")]),t._v(" pm2.io 使用 web 监控信息")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("pm2 plus\n")])])]),s("h3",{attrs:{id:"集群模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集群模式"}},[t._v("#")]),t._v(" 集群模式")]),t._v(" "),s("p",[t._v("对于Node.js应用，PM2包含一个自动负载均衡器，它将在每个生成的进程之间共享所有HTTP/Websocket/TCP/UDP连接。以集群模式启动应用。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("pm2 start app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("i max "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// max 表示 pm2 将自动检测可用的 CPU 数量, 也可以自己指定数量")]),t._v("\n")])])]),s("h3",{attrs:{id:"配置文件的形式启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置文件的形式启动"}},[t._v("#")]),t._v(" 配置文件的形式启动")]),t._v(" "),s("p",[t._v("你可以通过创建一个叫做 ecosystem 的配置文件, 来管理多个应用。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("pm2 init simple "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这样会生成一个 ecosystem.config,js, 其中包含了最简单的配置内容, 即应用名字和文件路径")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 然后通过下面的命令可以启动")]),t._v("\npm2 start ecosystem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n")])])]),s("h3",{attrs:{id:"设置-pm2-开机自启"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置-pm2-开机自启"}},[t._v("#")]),t._v(" 设置 pm2 开机自启")]),t._v(" "),s("p",[t._v("比如 centos 系统")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("pm2 startup centos\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 保存设置")]),t._v("\npm2 save\n")])])]),s("h2",{attrs:{id:"基础-不完整"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础-不完整"}},[t._v("#")]),t._v(" 基础 (不完整)")]),t._v(" "),s("h3",{attrs:{id:"配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[t._v("#")]),t._v(" 配置文件")]),t._v(" "),s("h4",{attrs:{id:"支持格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#支持格式"}},[t._v("#")]),t._v(" 支持格式")]),t._v(" "),s("p",[t._v("pm2 配置文件支持 js、json、yaml 格式。")]),t._v(" "),s("h4",{attrs:{id:"js-格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-格式"}},[t._v("#")]),t._v(" js 格式")]),t._v(" "),s("ol",[s("li",[t._v("生成配置文件模板")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("pm2 init\n")])])]),s("h4",{attrs:{id:"配置属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置属性"}},[t._v("#")]),t._v(" 配置属性")]),t._v(" "),s("ul",[s("li",[t._v("apps: 是一个数组, 其中每一个对象元素表示管理的一个应用进程")]),t._v(" "),s("li",[t._v("instances：集群模式下, 将应用程序分布在多少 CPU 上\n"),s("ul",[s("li",[t._v("0 / max : 将应用分布在所有 CPU 上 (注意这里 0 表示所有)")]),t._v(" "),s("li",[t._v("-1 : 将应用程序分布到所有 CPU - 1")]),t._v(" "),s("li",[t._v("number : 将应用程序分布在多个 CPU 上")])])]),t._v(" "),s("li",[t._v("cwd : 启动应用程序的目录, 相当于在这个目录下执行 pm2 xxxx, 对后面的 __dirname 这些有影响")]),t._v(" "),s("li",[t._v("name : 应用程序名称, 默认是不带扩展名的脚本文件名, 比如 pm2 start app.js 那么默认 name 就是 app")]),t._v(" "),s("li",[t._v("script : 执行的脚本的路径, 也就是 pm2 start 执行的脚本")]),t._v(" "),s("li",[t._v('exec_mode : 执行模式, 有 "cluster" 和 "fork" 两种值, 默认是 fork, 一般来说生产环境用 cluster')]),t._v(" "),s("li",[t._v("max_memory_restart : 超过这个指定的内存量, 应用程序将自动重新启动")]),t._v(" "),s("li",[t._v("kill_timeout (下面有详细解释) : 延长时间发送 final SIGKILL 信号")]),t._v(" "),s("li",[t._v("wait_ready :\n"),s("ul",[s("li",[t._v("默认为 false, 表示执行 listen 回调, 就将程序视为 online, 但是可能应用还需要在回调中与 dbs/caches/workers... 建立连接")]),t._v(" "),s("li",[t._v("所以如果将其设置为 true, 就可以手动执行 process.send('ready'), 只有执行这个代码, 才表示准备就绪应用上线")])])]),t._v(" "),s("li",[t._v("listen_timeout : 如果不执行 process.send('ready'), pm2 也不可能一直等待, 默认等待时间是 3000ms, 这里可以手动设置等待时间")]),t._v(" "),s("li",[t._v("error_file : 错误日志存放目录")]),t._v(" "),s("li",[t._v("out_file : 指定标准输出日志文件路径")]),t._v(" "),s("li",[t._v("环境变量, 值为 env_ 后的值, 值是一个对象, 对象作为环境变量参数, 也就是可以通过 process.env 拿到")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("kill_timeout")]),t._v(" "),s("p",[t._v("实际情况: 使用 pm2, 我们希望每次 pull 新的代码之后, 能够通过 reload 自动升级成最新的服务, 但是默认情况下, 由于 pm2 的 reload 是零延时重启, 所以 pm2 直接重启会导致正在处理的请求丢失, 所以在 pm2 重启前, 应该先通知应用, 让应用能够进行以下处理:")]),t._v(" "),s("ol",[s("li",[t._v("停止接收新的请求: 比如, server.close([callback])")]),t._v(" "),s("li",[t._v("尽可能保证处理完正在处理的请求: 在 close 回调函数中使用 setTimeout 延时执行 process.exit(0);")]),t._v(" "),s("li",[t._v("重启服务: 这里的重启肯定是希望有延时的, 因为要保证把上面的操作进行完, 所以就有了 kill_timeout 配置延时时间")])]),t._v(" "),s("p",[t._v("怎么通知应用? 可以在 pm2 启动的文件中添加 SIGINT 的监听：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SIGINT'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);